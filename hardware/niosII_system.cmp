	component niosII_system is
		port (
			clk_clk                                                               : in    std_logic                     := 'X';             -- clk
			reset_reset_n                                                         : in    std_logic                     := 'X';             -- reset_n
			green_leds_external_connection_export                                 : out   std_logic_vector(7 downto 0);                     -- export
			switch_external_connection_export                                     : in    std_logic                     := 'X';             -- export
			add_button_external_connection_export                                 : in    std_logic                     := 'X';             -- export
			red_leds_external_connection_export                                   : out   std_logic_vector(7 downto 0);                     -- export
			sdram_wire_addr                                                       : out   std_logic_vector(11 downto 0);                    -- addr
			sdram_wire_ba                                                         : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_wire_cas_n                                                      : out   std_logic;                                        -- cas_n
			sdram_wire_cke                                                        : out   std_logic;                                        -- cke
			sdram_wire_cs_n                                                       : out   std_logic;                                        -- cs_n
			sdram_wire_dq                                                         : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_wire_dqm                                                        : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_wire_ras_n                                                      : out   std_logic;                                        -- ras_n
			sdram_wire_we_n                                                       : out   std_logic;                                        -- we_n
			sram_external_interface_DQ                                            : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DQ
			sram_external_interface_ADDR                                          : out   std_logic_vector(17 downto 0);                    -- ADDR
			sram_external_interface_LB_N                                          : out   std_logic;                                        -- LB_N
			sram_external_interface_UB_N                                          : out   std_logic;                                        -- UB_N
			sram_external_interface_CE_N                                          : out   std_logic;                                        -- CE_N
			sram_external_interface_OE_N                                          : out   std_logic;                                        -- OE_N
			sram_external_interface_WE_N                                          : out   std_logic;                                        -- WE_N
			character_lcd_external_interface_DATA                                 : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- DATA
			character_lcd_external_interface_ON                                   : out   std_logic;                                        -- ON
			character_lcd_external_interface_BLON                                 : out   std_logic;                                        -- BLON
			character_lcd_external_interface_EN                                   : out   std_logic;                                        -- EN
			character_lcd_external_interface_RS                                   : out   std_logic;                                        -- RS
			character_lcd_external_interface_RW                                   : out   std_logic;                                        -- RW
			cancel_button_external_connection_export                              : in    std_logic                     := 'X';             -- export
			barcode_scanner_ps2_external_interface_CLK                            : inout std_logic                     := 'X';             -- CLK
			barcode_scanner_ps2_external_interface_DAT                            : inout std_logic                     := 'X';             -- DAT
			audio_core_external_interface_ADCDAT                                  : in    std_logic                     := 'X';             -- ADCDAT
			audio_core_external_interface_ADCLRCK                                 : in    std_logic                     := 'X';             -- ADCLRCK
			audio_core_external_interface_BCLK                                    : in    std_logic                     := 'X';             -- BCLK
			audio_core_external_interface_DACDAT                                  : out   std_logic;                                        -- DACDAT
			audio_core_external_interface_DACLRCK                                 : in    std_logic                     := 'X';             -- DACLRCK
			audio_config_external_interface_SDAT                                  : inout std_logic                     := 'X';             -- SDAT
			audio_config_external_interface_SCLK                                  : out   std_logic;                                        -- SCLK
			dm9000a_if_ethernet_s1_export_DATA                                    : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DATA
			dm9000a_if_ethernet_s1_export_CMD                                     : out   std_logic;                                        -- CMD
			dm9000a_if_ethernet_s1_export_RD_N                                    : out   std_logic;                                        -- RD_N
			dm9000a_if_ethernet_s1_export_WR_N                                    : out   std_logic;                                        -- WR_N
			dm9000a_if_ethernet_s1_export_CS_N                                    : out   std_logic;                                        -- CS_N
			dm9000a_if_ethernet_s1_export_RST_N                                   : out   std_logic;                                        -- RST_N
			dm9000a_if_ethernet_s1_export_INT                                     : in    std_logic                     := 'X';             -- INT
			dm9000a_if_ethernet_s1_export_CLK                                     : out   std_logic;                                        -- CLK
			tristate_conduit_bridge_out_tristate_controller_tcm_read_n_out        : out   std_logic_vector(0 downto 0);                     -- tristate_controller_tcm_read_n_out
			tristate_conduit_bridge_out_tristate_controller_tcm_address_out       : out   std_logic_vector(21 downto 0);                    -- tristate_controller_tcm_address_out
			tristate_conduit_bridge_out_tristate_controller_tcm_data_out          : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- tristate_controller_tcm_data_out
			tristate_conduit_bridge_out_tristate_controller_tcm_byteenable_out    : out   std_logic_vector(0 downto 0);                     -- tristate_controller_tcm_byteenable_out
			tristate_conduit_bridge_out_tristate_controller_tcm_begintransfer_out : out   std_logic_vector(0 downto 0);                     -- tristate_controller_tcm_begintransfer_out
			tristate_conduit_bridge_out_tristate_controller_tcm_write_n_out       : out   std_logic_vector(0 downto 0);                     -- tristate_controller_tcm_write_n_out
			tristate_conduit_bridge_out_tristate_controller_tcm_chipselect_n_out  : out   std_logic_vector(0 downto 0);                     -- tristate_controller_tcm_chipselect_n_out
			remove_button_external_connection_export                              : in    std_logic                     := 'X';             -- export
			main_pll_sdram_clk_clk                                                : out   std_logic;                                        -- clk
			clock_27mhz_clk_in_clk                                                : in    std_logic                     := 'X';             -- clk
			clock_27mhz_clk_in_reset_reset_n                                      : in    std_logic                     := 'X';             -- reset_n
			main_pll_audio_clk_clk                                                : out   std_logic                                         -- clk
		);
	end component niosII_system;

